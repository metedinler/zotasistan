Tabii ki! AÅŸaÄŸÄ±da, bu modÃ¼lleri Ã§alÄ±ÅŸtÄ±rmak iÃ§in gereken `requirements.txt` ve `.env` dosyalarÄ±nÄ± oluÅŸturacaÄŸÄ±m. Bu dosyalar, projenizin baÄŸÄ±mlÄ±lÄ±klarÄ±nÄ± ve ortam deÄŸiÅŸkenlerini yÃ¶netmenize yardÄ±mcÄ± olacaktÄ±r.

---

### **1. `requirements.txt` DosyasÄ±**

Bu dosya, projenizin Ã§alÄ±ÅŸmasÄ± iÃ§in gerekli olan Python kÃ¼tÃ¼phanelerini iÃ§erir. AÅŸaÄŸÄ±daki iÃ§eriÄŸi bir `requirements.txt` dosyasÄ±na kaydedin:

```plaintext
# Temel KÃ¼tÃ¼phaneler
PyMuPDF==1.23.0
openai==1.10.0
chromadb==0.4.10
requests==2.31.0
pandas==2.1.4
tqdm==4.66.1
colorlog==6.8.0
scikit-learn==1.3.2
transformers==4.35.2
customtkinter==5.2.1

# Opsiyonel KÃ¼tÃ¼phaneler (EÄŸer gerekli ise)
pdfminer.six==20231117
textract==1.6.0
psutil==5.9.6
pytz==2023.3.post1
# ```
# 
# # **Notlar:**
# # - EÄŸer herhangi bir kÃ¼tÃ¼phane yÃ¼kleme hatasÄ± alÄ±rsanÄ±z, ilgili kÃ¼tÃ¼phanenin sÃ¼rÃ¼mÃ¼nÃ¼ gÃ¼ncelleyebilirsiniz.
# # - `textract` gibi bazÄ± kÃ¼tÃ¼phaneler platforma baÄŸlÄ± olabilir. Ã–rneÄŸin, Windows'ta `textract` kurulumu iÃ§in ek baÄŸÄ±mlÄ±lÄ±klar gerekebilir.
# # 
# # KÃ¼tÃ¼phaneleri yÃ¼klemek iÃ§in aÅŸaÄŸÄ±daki komutu kullanÄ±n:
# # ```bash
# # pip install -r requirements.txt
# # ```
# 
# ---

### **2. `.env` DosyasÄ±**

Bu dosya, projenizin Ã§alÄ±ÅŸmasÄ± iÃ§in gereken ortam deÄŸiÅŸkenlerini iÃ§erir. AÅŸaÄŸÄ±daki iÃ§eriÄŸi bir `.env` dosyasÄ±na kaydedin:

```plaintext
# Dizin TanÄ±mlamalarÄ±
STORAGE_DIR=C:/Users/met e/Zotero/storage  # Zotero PDF'lerin saklandÄ±ÄŸÄ± dizin
SUCCESS_DIR=C:/Users/met e/Zotero/zotasistan/success  # Ä°ÅŸlenmiÅŸ dosyalarÄ±n saklanacaÄŸÄ± ana dizin
KAYNAK_DIZIN=C:/Users/met e/Zotero/zotasistan/kaynak  # Ana kaynak dizini
HEDEF_DIZIN=C:/Users/met e/Zotero/zotasistan/hedef  # Hedef dizin (Ã¶rneÄŸin temiz metinler)
TEMIZMETIN_DIR=C:/Users/met e/Zotero/zotasistan/temizmetin  # Temiz metinlerin saklanacaÄŸÄ± dizin
TEMIZ_TABLO_DIZIN=C:/Users/met e/Zotero/zotasistan/temiztablo  # Temiz tablolarÄ±n saklanacaÄŸÄ± dizin
TEMIZ_KAYNAKCA_DIZIN=C:/Users/met e/Zotero/zotasistan/temizkaynakca  # Temiz kaynakÃ§alarÄ±n saklanacaÄŸÄ± dizin
PDF_DIR=C:/Users/met e/Zotero/zotasistan/pdfler  # PDF'lerin saklanacaÄŸÄ± dizin
EMBEDDING_PARCA_DIR=C:/Users/met e/Zotero/zotasistan/embedingparca  # Embedding parÃ§alarÄ±nÄ±n saklanacaÄŸÄ± dizin

# Log DosyalarÄ±
LOG_DOSYASI=C:/Users/met e/Zotero/zotasistan/islem_logu.json  # Ä°ÅŸlem loglarÄ±
HATA_LOG_DOSYASI=C:/Users/met e/Zotero/zotasistan/hata_logu.json  # Hata loglarÄ±

# API AnahtarlarÄ±
OPENAI_API_KEY=your_openai_api_key_here  # OpenAI API anahtarÄ±
ZOTERO_API_KEY=your_zotero_api_key_here  # Zotero API anahtarÄ±
ZOTERO_USER_ID=your_zotero_user_id_here  # Zotero kullanÄ±cÄ± kimliÄŸi
ZOTERO_API_URL=https://api.zotero.org/users/your_zotero_user_id_here/items  # Zotero API URL'si

# ```
# 
# **Notlar:**
# 1. **Dizin YollarÄ±:** Dizin yollarÄ±nÄ± sisteminizdeki gerÃ§ek yollara gÃ¶re dÃ¼zenleyin. Ã–rneÄŸin, `C:/Users/met e/...` yerine kendi yollarÄ±nÄ±zÄ± yazÄ±n.
# 2. **API AnahtarlarÄ±:** 
#    - `OPENAI_API_KEY`: OpenAI hesabÄ±nÄ±zdan alÄ±nan API anahtarÄ±nÄ± buraya yazÄ±n.
#    - `ZOTERO_API_KEY` ve `ZOTERO_USER_ID`: Zotero hesabÄ±nÄ±zdan alÄ±nan API anahtarÄ±nÄ± ve kullanÄ±cÄ± kimliÄŸinizi buraya yazÄ±n.
# 3. **Log DosyalarÄ±:** Log dosyalarÄ±nÄ±n yollarÄ±nÄ± da dÃ¼zenleyebilirsiniz.
# 
# ---
# 
# ### **3. ModÃ¼lleri Ã‡alÄ±ÅŸtÄ±rma AdÄ±mlarÄ±**
# 
# 1. **Proje Dizini OluÅŸturun:**
#    - TÃ¼m modÃ¼lleri tek bir dizinde toplayÄ±n. Ã–rneÄŸin:
#      ```
#      zotasistan/
#      â”œâ”€â”€ module_main_program_flow.py
#      â”œâ”€â”€ module_memory_and_performance_monitoring.py
#      â”œâ”€â”€ requirements.txt
#      â”œâ”€â”€ .env
#      ```
# 
# 2. **BaÄŸÄ±mlÄ±lÄ±klarÄ± YÃ¼kleyin:**
#    - `requirements.txt` dosyasÄ±nÄ± kullanarak gerekli kÃ¼tÃ¼phaneleri yÃ¼kleyin:
#      ```bash
#      pip install -r requirements.txt
#      ```
# 
# 3. **Ortam DeÄŸiÅŸkenlerini AyarlayÄ±n:**
#    - `.env` dosyasÄ±ndaki deÄŸerleri dÃ¼zenleyin ve doÄŸru yollarÄ±/API anahtarlarÄ±nÄ± girin.
# 
# 4. **ModÃ¼lleri Ã‡alÄ±ÅŸtÄ±rÄ±n:**
#    - Ana program akÄ±ÅŸÄ±nÄ± baÅŸlatmak iÃ§in aÅŸaÄŸÄ±daki komutu kullanÄ±n:
#      ```bash
#      python module_main_program_flow.py
#      ```
# 
# 5. **GUI'yi KullanÄ±n (Opsiyonel):**
#    - EÄŸer GUI Ã¶zelliklerini kullanmak istiyorsanÄ±z, `AdditionalFeaturesGUI` sÄ±nÄ±fÄ±nÄ± Ã§alÄ±ÅŸtÄ±rmak iÃ§in:
#      ```bash
#      python -m tkinter  # Tkinter'in dÃ¼zgÃ¼n Ã§alÄ±ÅŸtÄ±ÄŸÄ±ndan emin olun
#      python module_main_program_flow.py
#      ```
# 
# ---
# 
# ### **4. Ek Notlar**
# 
# - **Hata AyÄ±klama:** EÄŸer herhangi bir hata alÄ±rsanÄ±z, `pdf_processing.log` veya `hata_logu.json` dosyalarÄ±nÄ± kontrol edin. Bu dosyalar size detaylÄ± bilgi verecektir.
# - **Paralel Ä°ÅŸleme:** Proje, `multiprocessing` kullanarak paralel iÅŸleme yapar. EÄŸer Ã§ok Ã§ekirdekli bir sistemde Ã§alÄ±ÅŸÄ±yorsanÄ±z, performans artÄ±ÅŸÄ± saÄŸlayacaktÄ±r.
# - **ChromaDB VeritabanÄ±:** ChromaDB veritabanÄ±, `chroma_db` adlÄ± bir dizinde saklanÄ±r. Bu dizini dÃ¼zenli olarak yedeklemeniz Ã¶nerilir.
# 
# ---

Bu adÄ±mlarÄ± takip ederek projenizi sorunsuz bir ÅŸekilde Ã§alÄ±ÅŸtÄ±rabilirsiniz. EÄŸer herhangi bir sorun yaÅŸarsanÄ±z, lÃ¼tfen bana bildirin! ğŸ˜Š